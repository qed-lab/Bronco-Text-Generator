//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/angry/source/repos/BroncoLibrary/ANTLRParser\BroncoLexer.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class BroncoLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TITLE=1, BOOL_LITERAL=2, IDENTIFIER=3, NUMBER=4, SKIP_COMMENT=5, SKIP_WS=6, 
		COLON=7, COMMA=8, OP=9, CP=10, GT=11, START_QUOTE=12, CLOSE_SQUARE=13, 
		TITLE_COLON=14, TITLE_COMMA=15, TITLE_ID=16, TITLE_SKIP_WS=17, TITLE_OPEN_SQUARE=18, 
		TITLE_NEWLINE=19, LT=20, META_TAG=21, META_WEIGHT=22, TERMINAL=23, END_QUOTE=24, 
		EMPTY_LINE=25, NEWLINE=26, TERMINAL_OPEN_SQUARE=27;
	public const int
		TITLE_MODE=1, TERMINAL_MODE=2;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "TITLE_MODE", "TERMINAL_MODE"
	};

	public static readonly string[] ruleNames = {
		"ID", "NUM", "NL", "TITLE", "BOOL_LITERAL", "IDENTIFIER", "NUMBER", "SKIP_COMMENT", 
		"SKIP_WS", "COLON", "COMMA", "OP", "CP", "GT", "START_QUOTE", "CLOSE_SQUARE", 
		"TITLE_COLON", "TITLE_COMMA", "TITLE_ID", "TITLE_SKIP_WS", "TITLE_OPEN_SQUARE", 
		"TITLE_NEWLINE", "LT", "META_TAG", "META_WEIGHT", "TERMINAL", "END_QUOTE", 
		"EMPTY_LINE", "NEWLINE", "TERMINAL_OPEN_SQUARE"
	};


	public BroncoLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public BroncoLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, "':'", "','", "'('", "')'", 
		"'>'", null, "']'", null, null, null, null, null, null, "'<'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TITLE", "BOOL_LITERAL", "IDENTIFIER", "NUMBER", "SKIP_COMMENT", 
		"SKIP_WS", "COLON", "COMMA", "OP", "CP", "GT", "START_QUOTE", "CLOSE_SQUARE", 
		"TITLE_COLON", "TITLE_COMMA", "TITLE_ID", "TITLE_SKIP_WS", "TITLE_OPEN_SQUARE", 
		"TITLE_NEWLINE", "LT", "META_TAG", "META_WEIGHT", "TERMINAL", "END_QUOTE", 
		"EMPTY_LINE", "NEWLINE", "TERMINAL_OPEN_SQUARE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "BroncoLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static BroncoLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,27,223,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
		7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
		7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,
		7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,
		7,27,2,28,7,28,2,29,7,29,1,0,1,0,5,0,66,8,0,10,0,12,0,69,9,0,1,1,3,1,72,
		8,1,1,1,4,1,75,8,1,11,1,12,1,76,1,1,1,1,4,1,81,8,1,11,1,12,1,82,3,1,85,
		8,1,1,2,3,2,88,8,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,
		1,4,1,4,1,4,3,4,106,8,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,4,7,116,8,7,11,
		7,12,7,117,1,7,1,7,1,7,1,7,1,7,1,8,4,8,126,8,8,11,8,12,8,127,1,8,1,8,1,
		9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
		1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,4,19,159,8,
		19,11,19,12,19,160,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
		22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,3,23,182,8,23,1,23,5,23,185,
		8,23,10,23,12,23,188,9,23,1,24,1,24,1,24,5,24,193,8,24,10,24,12,24,196,
		9,24,1,25,4,25,199,8,25,11,25,12,25,200,1,26,1,26,1,26,1,26,1,27,1,27,
		5,27,209,8,27,10,27,12,27,212,9,27,1,27,1,27,1,27,1,27,1,28,1,28,1,29,
		1,29,1,29,1,29,0,0,30,3,0,5,0,7,0,9,1,11,2,13,3,15,4,17,5,19,6,21,7,23,
		8,25,9,27,10,29,11,31,12,33,13,35,14,37,15,39,16,41,17,43,18,45,19,47,
		20,49,21,51,22,53,23,55,24,57,25,59,26,61,27,3,0,1,2,7,2,0,65,90,97,122,
		4,0,48,57,65,90,95,95,97,122,1,0,48,57,1,0,42,42,3,0,9,10,13,13,32,32,
		2,0,9,9,32,32,7,0,10,10,13,13,35,35,37,37,60,60,91,91,96,96,232,0,9,1,
		0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
		0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
		1,0,0,0,0,33,1,0,0,0,1,35,1,0,0,0,1,37,1,0,0,0,1,39,1,0,0,0,1,41,1,0,0,
		0,1,43,1,0,0,0,1,45,1,0,0,0,2,47,1,0,0,0,2,49,1,0,0,0,2,51,1,0,0,0,2,53,
		1,0,0,0,2,55,1,0,0,0,2,57,1,0,0,0,2,59,1,0,0,0,2,61,1,0,0,0,3,63,1,0,0,
		0,5,71,1,0,0,0,7,87,1,0,0,0,9,91,1,0,0,0,11,105,1,0,0,0,13,107,1,0,0,0,
		15,109,1,0,0,0,17,111,1,0,0,0,19,125,1,0,0,0,21,131,1,0,0,0,23,133,1,0,
		0,0,25,135,1,0,0,0,27,137,1,0,0,0,29,139,1,0,0,0,31,143,1,0,0,0,33,147,
		1,0,0,0,35,151,1,0,0,0,37,153,1,0,0,0,39,155,1,0,0,0,41,158,1,0,0,0,43,
		164,1,0,0,0,45,168,1,0,0,0,47,172,1,0,0,0,49,176,1,0,0,0,51,189,1,0,0,
		0,53,198,1,0,0,0,55,202,1,0,0,0,57,206,1,0,0,0,59,217,1,0,0,0,61,219,1,
		0,0,0,63,67,7,0,0,0,64,66,7,1,0,0,65,64,1,0,0,0,66,69,1,0,0,0,67,65,1,
		0,0,0,67,68,1,0,0,0,68,4,1,0,0,0,69,67,1,0,0,0,70,72,5,45,0,0,71,70,1,
		0,0,0,71,72,1,0,0,0,72,74,1,0,0,0,73,75,7,2,0,0,74,73,1,0,0,0,75,76,1,
		0,0,0,76,74,1,0,0,0,76,77,1,0,0,0,77,84,1,0,0,0,78,80,5,46,0,0,79,81,7,
		2,0,0,80,79,1,0,0,0,81,82,1,0,0,0,82,80,1,0,0,0,82,83,1,0,0,0,83,85,1,
		0,0,0,84,78,1,0,0,0,84,85,1,0,0,0,85,6,1,0,0,0,86,88,5,13,0,0,87,86,1,
		0,0,0,87,88,1,0,0,0,88,89,1,0,0,0,89,90,5,10,0,0,90,8,1,0,0,0,91,92,5,
		64,0,0,92,93,3,3,0,0,93,94,1,0,0,0,94,95,6,3,0,0,95,10,1,0,0,0,96,97,5,
		116,0,0,97,98,5,114,0,0,98,99,5,117,0,0,99,106,5,101,0,0,100,101,5,102,
		0,0,101,102,5,97,0,0,102,103,5,108,0,0,103,104,5,115,0,0,104,106,5,101,
		0,0,105,96,1,0,0,0,105,100,1,0,0,0,106,12,1,0,0,0,107,108,3,3,0,0,108,
		14,1,0,0,0,109,110,3,5,1,0,110,16,1,0,0,0,111,112,5,47,0,0,112,113,5,42,
		0,0,113,115,1,0,0,0,114,116,8,3,0,0,115,114,1,0,0,0,116,117,1,0,0,0,117,
		115,1,0,0,0,117,118,1,0,0,0,118,119,1,0,0,0,119,120,5,42,0,0,120,121,5,
		47,0,0,121,122,1,0,0,0,122,123,6,7,1,0,123,18,1,0,0,0,124,126,7,4,0,0,
		125,124,1,0,0,0,126,127,1,0,0,0,127,125,1,0,0,0,127,128,1,0,0,0,128,129,
		1,0,0,0,129,130,6,8,1,0,130,20,1,0,0,0,131,132,5,58,0,0,132,22,1,0,0,0,
		133,134,5,44,0,0,134,24,1,0,0,0,135,136,5,40,0,0,136,26,1,0,0,0,137,138,
		5,41,0,0,138,28,1,0,0,0,139,140,5,62,0,0,140,141,1,0,0,0,141,142,6,13,
		2,0,142,30,1,0,0,0,143,144,5,96,0,0,144,145,1,0,0,0,145,146,6,14,2,0,146,
		32,1,0,0,0,147,148,5,93,0,0,148,149,1,0,0,0,149,150,6,15,3,0,150,34,1,
		0,0,0,151,152,3,21,9,0,152,36,1,0,0,0,153,154,3,23,10,0,154,38,1,0,0,0,
		155,156,3,3,0,0,156,40,1,0,0,0,157,159,7,5,0,0,158,157,1,0,0,0,159,160,
		1,0,0,0,160,158,1,0,0,0,160,161,1,0,0,0,161,162,1,0,0,0,162,163,6,19,1,
		0,163,42,1,0,0,0,164,165,5,91,0,0,165,166,1,0,0,0,166,167,6,20,4,0,167,
		44,1,0,0,0,168,169,3,7,2,0,169,170,1,0,0,0,170,171,6,21,2,0,171,46,1,0,
		0,0,172,173,5,60,0,0,173,174,1,0,0,0,174,175,6,22,5,0,175,48,1,0,0,0,176,
		177,5,35,0,0,177,181,3,3,0,0,178,179,3,21,9,0,179,180,3,5,1,0,180,182,
		1,0,0,0,181,178,1,0,0,0,181,182,1,0,0,0,182,186,1,0,0,0,183,185,7,5,0,
		0,184,183,1,0,0,0,185,188,1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,
		50,1,0,0,0,188,186,1,0,0,0,189,190,5,37,0,0,190,194,3,5,1,0,191,193,7,
		5,0,0,192,191,1,0,0,0,193,196,1,0,0,0,194,192,1,0,0,0,194,195,1,0,0,0,
		195,52,1,0,0,0,196,194,1,0,0,0,197,199,8,6,0,0,198,197,1,0,0,0,199,200,
		1,0,0,0,200,198,1,0,0,0,200,201,1,0,0,0,201,54,1,0,0,0,202,203,5,96,0,
		0,203,204,1,0,0,0,204,205,6,26,5,0,205,56,1,0,0,0,206,210,3,7,2,0,207,
		209,7,5,0,0,208,207,1,0,0,0,209,212,1,0,0,0,210,208,1,0,0,0,210,211,1,
		0,0,0,211,213,1,0,0,0,212,210,1,0,0,0,213,214,3,7,2,0,214,215,1,0,0,0,
		215,216,6,27,5,0,216,58,1,0,0,0,217,218,3,7,2,0,218,60,1,0,0,0,219,220,
		5,91,0,0,220,221,1,0,0,0,221,222,6,29,4,0,222,62,1,0,0,0,18,0,1,2,67,71,
		76,82,84,87,105,117,127,160,181,186,194,200,210,6,2,1,0,6,0,0,2,2,0,4,
		0,0,5,0,0,2,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
